// <auto-generated />
using System;
using API_BloodBank_v1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_BloodBank_v1.Migrations
{
    [DbContext(typeof(Db_BloodBank_v1))]
    [Migration("20220930160201_dbInitStructure_v2")]
    partial class dbInitStructure_v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_BloodBank_v1.Data.BacSi", b =>
                {
                    b.Property<Guid>("Id_BacSi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_BacSi");

                    b.HasIndex("Sdt")
                        .IsUnique()
                        .HasFilter("[Sdt] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("BacSi");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.BenhVien", b =>
                {
                    b.Property<int>("Id_BenhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dc_BenhVien")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenBenhVien")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id_BenhVien");

                    b.ToTable("BenhVien");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietBenhVien", b =>
                {
                    b.Property<int>("Id_BenhVien")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_BacSi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNghi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_BenhVien", "Id_BacSi");

                    b.HasIndex("Id_BacSi");

                    b.ToTable("ChiTietBenhVien");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietSuDung", b =>
                {
                    b.Property<Guid>("Id_BacSi_Nhap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_BenhVien_Dung")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_BacSi_Dung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_LoaiMau")
                        .HasColumnType("int");

                    b.Property<int>("Id_LoaiXetNghiem")
                        .HasColumnType("int");

                    b.Property<int>("Id_BenhVien_Nhap")
                        .HasColumnType("int");

                    b.Property<int>("Id_SuKien")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_NguoiHienMau")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_BacSi_Nhap", "Id_BenhVien_Dung", "Id_BacSi_Dung", "Id_LoaiMau", "Id_LoaiXetNghiem", "Id_BenhVien_Nhap", "Id_SuKien", "Id_NguoiHienMau");

                    b.HasIndex("Id_BenhVien_Dung", "Id_BacSi_Dung");

                    b.HasIndex("Id_NguoiHienMau", "Id_SuKien", "Id_BacSi_Nhap", "Id_BenhVien_Nhap", "Id_LoaiMau", "Id_LoaiXetNghiem");

                    b.ToTable("ChiTietSuDung");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietSuKien", b =>
                {
                    b.Property<Guid>("Id_NguoiHienMau")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_SuKien")
                        .HasColumnType("int");

                    b.HasKey("Id_NguoiHienMau", "Id_SuKien");

                    b.HasIndex("Id_SuKien");

                    b.ToTable("ChiTietSuKien");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietYeuCau", b =>
                {
                    b.Property<int>("Id_LoaiMau")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_BacSi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_BenhVien")
                        .HasColumnType("int");

                    b.Property<float>("TongTheTich")
                        .HasColumnType("real");

                    b.HasKey("Id_LoaiMau", "Id_BacSi", "Id_BenhVien");

                    b.HasIndex("Id_BacSi", "Id_BenhVien");

                    b.ToTable("ChiTietYeuCau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.DiaChi", b =>
                {
                    b.Property<int>("Id_DC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChiTiet")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id_DC");

                    b.ToTable("DiaChi");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.KetQuaXetNghiem", b =>
                {
                    b.Property<Guid>("Id_NguoiHienMau")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_SuKien")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_BacSi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_BenhVien")
                        .HasColumnType("int");

                    b.Property<int>("Id_LoaiMau")
                        .HasColumnType("int");

                    b.Property<int>("Id_LoaiXetNghiem")
                        .HasColumnType("int");

                    b.Property<bool>("DaHienMau")
                        .HasColumnType("bit");

                    b.Property<string>("FileKetQua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("KetQuaHienMau")
                        .HasColumnType("bit");

                    b.Property<float>("TheTich")
                        .HasColumnType("real");

                    b.Property<DateTime>("ThoiGianHienMau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTraKetQua")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_NguoiHienMau", "Id_SuKien", "Id_BacSi", "Id_BenhVien", "Id_LoaiMau", "Id_LoaiXetNghiem");

                    b.HasIndex("Id_LoaiMau");

                    b.HasIndex("Id_LoaiXetNghiem");

                    b.HasIndex("Id_BenhVien", "Id_BacSi");

                    b.ToTable("KetQuaXetNghiem");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.LoaiMau", b =>
                {
                    b.Property<int>("Id_LoaiMau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("TheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.HasKey("Id_LoaiMau");

                    b.ToTable("LoaiMau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.LoaiXetNghiem", b =>
                {
                    b.Property<int>("ID_LoaiXetNghiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChiPhi")
                        .HasColumnType("real");

                    b.Property<string>("PathFileChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_LoaiXetNghiem");

                    b.ToTable("LoaiXetNghiem");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.NguoiHienMau", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UID");

                    b.HasIndex("Sdt")
                        .IsUnique()
                        .HasFilter("[Sdt] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("NguoiHienMau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.SuKienHienMau", b =>
                {
                    b.Property<int>("Id_SuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Id_BacSi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_BenhVien")
                        .HasColumnType("int");

                    b.Property<int>("Id_DiaChi")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatdau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_SuKien");

                    b.HasIndex("Id_DiaChi");

                    b.HasIndex("Id_BenhVien", "Id_BacSi");

                    b.ToTable("SuKienHienMau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.YeuCau", b =>
                {
                    b.Property<Guid>("Id_BacSi")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_BenhVien")
                        .HasColumnType("int");

                    b.Property<string>("FileKetQua")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("KetQua")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ThoiGianYeuCau")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_BacSi", "Id_BenhVien");

                    b.HasIndex("Id_BenhVien");

                    b.ToTable("YeuCau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietBenhVien", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.BacSi", "BacSi")
                        .WithMany("chiTietBenhViens")
                        .HasForeignKey("Id_BacSi")
                        .HasConstraintName("bacsi_lamviec_chitietbenhvien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.BenhVien", "BenhVien")
                        .WithMany("chiTietBenhViens")
                        .HasForeignKey("Id_BenhVien")
                        .HasConstraintName("Benhvien_co_chitietbenhvien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("BenhVien");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietSuDung", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.ChiTietBenhVien", "ChiTietBenhVien")
                        .WithMany("ChiTietSuDungs")
                        .HasForeignKey("Id_BenhVien_Dung", "Id_BacSi_Dung")
                        .HasConstraintName("BacSiCuaBenhVien_SuDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.KetQuaXetNghiem", "KetQuaXetNghiem")
                        .WithMany("ChiTietSuDungs")
                        .HasForeignKey("Id_NguoiHienMau", "Id_SuKien", "Id_BacSi_Nhap", "Id_BenhVien_Nhap", "Id_LoaiMau", "Id_LoaiXetNghiem")
                        .HasConstraintName("KetQuaXetNghiem_DuocSuDungBoi_ChiTietSuDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietBenhVien");

                    b.Navigation("KetQuaXetNghiem");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietSuKien", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.NguoiHienMau", "NguoiHienMau")
                        .WithMany("ChiTietSuKiens")
                        .HasForeignKey("Id_NguoiHienMau")
                        .HasConstraintName("NguoiHienMau_thamgia_Sukien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.SuKienHienMau", "SuKienHienMau")
                        .WithMany("ChiTietSuKiens")
                        .HasForeignKey("Id_SuKien")
                        .HasConstraintName("SuKienHienMau_Co_ChiTietSuKien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiHienMau");

                    b.Navigation("SuKienHienMau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietYeuCau", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.LoaiMau", "LoaiMau")
                        .WithMany("ChiTietYeuCaus")
                        .HasForeignKey("Id_LoaiMau")
                        .HasConstraintName("LoaiMau_NamTrong_ChiTietYeuCau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.YeuCau", "YeuCau")
                        .WithMany("ChiTietYeuCaus")
                        .HasForeignKey("Id_BacSi", "Id_BenhVien")
                        .HasConstraintName("YeuCau_Co_ChiTietYeuCau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiMau");

                    b.Navigation("YeuCau");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.KetQuaXetNghiem", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.LoaiMau", "LoaiMau")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("Id_LoaiMau")
                        .HasConstraintName("LoaiMau_KetQuaXetNGhiem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.LoaiXetNghiem", "LoaiXetNghiem")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("Id_LoaiXetNghiem")
                        .HasConstraintName("LoaiXetNghiem_KetQuaXetNGhiem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.ChiTietBenhVien", "ChiTietBenhVien")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("Id_BenhVien", "Id_BacSi")
                        .HasConstraintName("ChiTietBenhVien_KetQuaXetNghiem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.ChiTietSuKien", "ChiTietSuKien")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("Id_NguoiHienMau", "Id_SuKien")
                        .HasConstraintName("ChiTietSuKien_KetQuaXetNghiem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChiTietBenhVien");

                    b.Navigation("ChiTietSuKien");

                    b.Navigation("LoaiMau");

                    b.Navigation("LoaiXetNghiem");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.SuKienHienMau", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.DiaChi", "DiaChi")
                        .WithMany("SuKienHienMaus")
                        .HasForeignKey("Id_DiaChi")
                        .HasConstraintName("Diachi_cua_sukienhienmau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.ChiTietBenhVien", "ChiTietBenhVien")
                        .WithMany("SuKienHienMaus")
                        .HasForeignKey("Id_BenhVien", "Id_BacSi")
                        .HasConstraintName("BacSi_Tochuc_Sukienhienmaus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietBenhVien");

                    b.Navigation("DiaChi");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.YeuCau", b =>
                {
                    b.HasOne("API_BloodBank_v1.Data.BacSi", "BacSi")
                        .WithMany("yeuCaus")
                        .HasForeignKey("Id_BacSi")
                        .HasConstraintName("bacsi_yeucau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_BloodBank_v1.Data.BenhVien", "BenhVien")
                        .WithMany("yeuCaus")
                        .HasForeignKey("Id_BenhVien")
                        .HasConstraintName("yeuccau_benhvien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("BenhVien");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.BacSi", b =>
                {
                    b.Navigation("chiTietBenhViens");

                    b.Navigation("yeuCaus");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.BenhVien", b =>
                {
                    b.Navigation("chiTietBenhViens");

                    b.Navigation("yeuCaus");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietBenhVien", b =>
                {
                    b.Navigation("ChiTietSuDungs");

                    b.Navigation("KetQuaXetNghiems");

                    b.Navigation("SuKienHienMaus");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.ChiTietSuKien", b =>
                {
                    b.Navigation("KetQuaXetNghiems");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.DiaChi", b =>
                {
                    b.Navigation("SuKienHienMaus");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.KetQuaXetNghiem", b =>
                {
                    b.Navigation("ChiTietSuDungs");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.LoaiMau", b =>
                {
                    b.Navigation("ChiTietYeuCaus");

                    b.Navigation("KetQuaXetNghiems");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.LoaiXetNghiem", b =>
                {
                    b.Navigation("KetQuaXetNghiems");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.NguoiHienMau", b =>
                {
                    b.Navigation("ChiTietSuKiens");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.SuKienHienMau", b =>
                {
                    b.Navigation("ChiTietSuKiens");
                });

            modelBuilder.Entity("API_BloodBank_v1.Data.YeuCau", b =>
                {
                    b.Navigation("ChiTietYeuCaus");
                });
#pragma warning restore 612, 618
        }
    }
}
